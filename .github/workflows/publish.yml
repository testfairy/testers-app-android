on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*' # Push events to matching *

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Compile App
        run: |
          export TESTFAIRY_KEYSTORE_PASSWORD=${{ secrets.TESTFAIRY_KEYSTORE_PASSWORD }}
          echo ${{ secrets.TESTFAIRY_KEYSTORE_BASE64 }} | base64 -d > testfairy.keystore
          printf "\norg.gradle.daemon=false" >> gradle.properties

          ./gradlew TestFairyApp:assembleRelease
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Mobile
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./TestFairyApp/build/outputs/apk/mobile/release/TestFairyApp-mobile-release.apk
          asset_name: testers-app-mobile.apk
          asset_content_type: application/vnd.android.package-archive
      - name: Upload TV
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: ./TestFairyApp/build/outputs/apk/tv/release/TestFairyApp-tv-release.apk
            asset_name: testers-app-tv.apk
            asset_content_type: application/vnd.android.package-archive